{
	"$schema":"http://json-schema.org/draft-07/schema",
	"ID":"Pixels.json",
	"version":"2.00.0",
	"type":"object",
	"title":"Pixels",
	"description":"The Pixels element is going to be removed in the future, but it is still required. This is just notice that the contents of Pixels will be moved up to Image in a future release. This is because there has only been 1 Pixels object in each Image for some time. The concept of multiple Pixels sets for one Image failed to take off. It is therefore redundant. The Image will be unreadable if any of the required Pixel attributes are missing. The Pixels themselves can be stored within the OME-XML compressed by Plane, and encoded in Base64. Or the Pixels may be stored in TIFF format. The Pixels element should contain a list of BinData or TiffData, each containing a single Plane of pixels. These Pixels elements, when read in document order, must produce a 5-D Pixel array of the size specified in this element, and in the dimension order specified by 'DimensionOrder'. All of the values in the Pixels object when present should match the same value stored in any associated TIFF format (e.g. SizeX should be the same). Where there is a mismatch our readers will take the value from the TIFF structure as overriding the value in the OME-XML. This is simply a pragmatic decision as it increases the likelihood of reading data from a slightly incorrect file.",
	"modelSettings":"NA",
	"extension":"Core",
	"domain":"ImageAcquisitionSettings",
	"category":"Image",
	"image":"Image_Pixels.svg",
	"tier":1,
	"subCategoriesOrder": {
		"General":"General information about the element",
		"Pixels":"The Pixels element is going to be removed in the future, but it is still required. This is just notice that the contents of Pixels will be moved up to Image in a future release. This is because there has only been 1 Pixels object in each Image for some time. The concept of multiple Pixels sets for one Image failed to take off. It is therefore redundant. The Image will be unreadable if any of the required Pixel attributes are missing. The Pixels themselves can be stored within the OME-XML compressed by Plane, and encoded in Base64. Or the Pixels may be stored in TIFF format. The Pixels element should contain a list of BinData or TiffData, each containing a single Plane of pixels. These Pixels elements, when read in document order, must produce a 5-D Pixel array of the size specified in this element, and in the dimension order specified by 'DimensionOrder'. All of the values in the Pixels object when present should match the same value stored in any associated TIFF format (e.g. SizeX should be the same). Where there is a mismatch our readers will take the value from the TIFF structure as overriding the value in the OME-XML. This is simply a pragmatic decision as it increases the likelihood of reading data from a slightly incorrect file."
	},
	"properties": {
		"ID": {
			"type":"string",
			"description":"A Unique Identifier for this component.",
			"tier":1,
			"category":"General",
			"readonly":true
		},
		"DimensionOrder": {
			"type":"string",
			"description":"This field records the order in which the individual Planes of data are interleaved in the Image.",
			"tier":1,
			"enum": [
				"XYZCT",
				"XYZTC",
				"XYCTZ",
				"XYCZT",
				"XYTCZ",
				"XYTZC"
			],
			"category":"Pixels"
		},
		"SizeX": {
			"type":"string",
			"description":"This field records the X size of the Pixel data array.",
			"tier":1,
			"category":"Pixels"
		},
		"SizeY": {
			"type":"string",
			"description":"This field records the Y size of the Pixel data array.",
			"tier":1,
			"category":"Pixels"
		},
		"SizeZ": {
			"type":"string",
			"description":"This field records the number of Z-Planes acquired for this Image.",
			"tier":1,
			"category":"Pixels"
		},
		"SizeC": {
			"type":"string",
			"description":"This field records the number of Channels used in this Image",
			"tier":1,
			"category":"Pixels"
		},
		"SizeT": {
			"type":"string",
			"description":"This field records the number of Timepoints (often referred to as Frames) used in this Image.",
			"tier":1,
			"category":"Pixels"
		},
		"PhysicalSizeX": {
			"type":"number",
			"description":"This field records the real world Physical Width represented by a Pixel in this Image. This measure is often referred to as X Pixel Size.",
			"tier":1,
			"category":"Pixels"
		},
		"PhysicalSizeXUnit": {
			"type":"string",
			"description":"NA",
			"tier":1,
			"default":"µm",
			"enum": [
				"Ym",
				"Zm",
				"Em",
				"Pm",
				"Tm",
				"Gm",
				"Mm",
				"km",
				"hm",
				"dam",
				"m",
				"dm",
				"cm",
				"mm",
				"µm",
				"nm",
				"pm",
				"fm",
				"am",
				"zm",
				"ym",
				"Å",
				"thou",
				"li",
				"in",
				"ft",
				"yd",
				"mi",
				"ua",
				"ly",
				"pc",
				"pt",
				"Pixel",
				"reference frame"
			],
			"category":"Pixels"
		},
		"PhysicalSizeY": {
			"type":"number",
			"description":"This field records the real world Physical Height represented by a Pixel in this Image. This measure is often referred to as Y Pixel Size.",
			"tier":1,
			"category":"Pixels"
		},
		"PhysicalSizeYUnit": {
			"type":"string",
			"description":"NA",
			"tier":1,
			"default":"µm",
			"enum": [
				"Ym",
				"Zm",
				"Em",
				"Pm",
				"Tm",
				"Gm",
				"Mm",
				"km",
				"hm",
				"dam",
				"m",
				"dm",
				"cm",
				"mm",
				"µm",
				"nm",
				"pm",
				"fm",
				"am",
				"zm",
				"ym",
				"Å",
				"thou",
				"li",
				"in",
				"ft",
				"yd",
				"mi",
				"ua",
				"ly",
				"pc",
				"pt",
				"Pixel",
				"reference frame"
			],
			"category":"Pixels"
		},
		"PhysicalSizeZ": {
			"type":"number",
			"description":"This field records the real world Physical distance between the individual Z-Planes recorded for this Image. This measure is sometimes referred to as Z Pixel or Voxel Size.",
			"tier":1,
			"category":"Pixels"
		},
		"PhysicalSizeZUnit": {
			"type":"string",
			"description":"NA",
			"tier":1,
			"default":"µm",
			"enum": [
				"Ym",
				"Zm",
				"Em",
				"Pm",
				"Tm",
				"Gm",
				"Mm",
				"km",
				"hm",
				"dam",
				"m",
				"dm",
				"cm",
				"mm",
				"µm",
				"nm",
				"pm",
				"fm",
				"am",
				"zm",
				"ym",
				"Å",
				"thou",
				"li",
				"in",
				"ft",
				"yd",
				"mi",
				"ua",
				"ly",
				"pc",
				"pt",
				"Pixel",
				"reference frame"
			],
			"category":"Pixels"
		},
		"TimeIncrement": {
			"type":"number",
			"description":"In cases in which a time series is acquired with a global timing specification setting, this field describes the time between each sequential plane (or frame) in the series (i.e., from the start of time point 1 to the start of time point 2). Examples include, a video stream or a multi-dimensional Acquisition routine. Note that, this field is not intended to substitute the Timestamp attribute recorded in Plane. Also note that in case this field is not relevant e.g. a time lapse Acquisition with irregular increments, the value -1 should be used to indicate that only the Timestamps (in the Plane element) are valid.",
			"tier":1,
			"category":"Pixels"
		},
		"TimeIncrementUnit": {
			"type":"string",
			"description":"NA",
			"tier":1,
			"default":"s",
			"enum": [
				"Ys",
				"Zs",
				"Es",
				"Ps",
				"Ts",
				"Gs",
				"Ms",
				"ks",
				"hs",
				"das",
				"s",
				"ds",
				"cs",
				"ms",
				"µs",
				"ns",
				"ps",
				"fs",
				"as",
				"zs",
				"ys",
				"min",
				"h",
				"d"
			],
			"category":"Pixels"
		},
		"PixelType": {
			"type":"string",
			"description":"This field records the variable type used to represent the Pixel Intensity in the Image.",
			"tier":2,
			"enum": [
				"bit",
				"complex",
				"double",
				"double-complex",
				"float",
				"int8",
				"int16",
				"int32",
				"uint8",
				"uint16",
				"uint32",
				"Other"
			],
			"category":"Pixels"
		},
		"Interleaved": {
			"type":"boolean",
			"description":"This field records the order in which the Channels are arranged within the data block: True if Channels are stored RGBRGBRGB...; False if Channels are stored RRR...GGG...BBB…",
			"tier":2,
			"category":"Pixels"
		},
		"SignificantBits": {
			"type":"string",
			"description":"This field records the number of bits within the type storing each Pixel value that are significant. e.g.,. you can store 12-bit data within a 16-bit type. This does not reduce the storage requirements but can be a useful indicator when processing or viewing the Image data.",
			"tier":3,
			"category":"Pixels"
		},
		"BigEndian": {
			"type":"boolean",
			"description":"This field is True if the pixels data was written in BigEndian order. If this value is present, it should match the value used in BinData or TiffData. If it is not, a reader should be used that honors the value used in the BinData or TiffData. This value is useful for MetadataOnly files and is to allow for future storage solutions. ",
			"tier":3,
			"category":"Pixels"
		},
		"Tier": {
			"type":"integer",
			"description":"The tier level of this component.",
			"tier":1,
			"category":"General",
			"readonly":true
		}
	},
	"required": [
		"ID",
		"DimensionOrder",
		"SizeX",
		"SizeY",
		"SizeZ",
		"SizeC",
		"SizeT",
		"PhysicalSizeX",
		"PhysicalSizeY",
		"PhysicalSizeZ",
		"TimeIncrement",
		"PixelType",
		"Tier"
	]
}